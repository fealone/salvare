#!/bin/bash -e

POSITIONAL=()
TARGET=${1%/}
UPLOAD_TYPE=""
DESTINATION=""
TMPDIR="/tmp"
ACCESS_TOKEN=""
ACCESS_KEY_ID=""
SECRET_ACCESS_KEY=""

function show_help () {
    cat << EOF
Usage: salvare [TARGET] [OPTIONS]...

Target:
  Backup target

Options:
  -h, --help  Show this message and exit.
  -u, --upload-type [ENUM]  Select upload type [GCS, S3, Dropbox].
  -d, --destination [TEXT]  Destination path by upload type.
  -t, --tmpdir [TEXT]  The path used for writing with temporary.
  -n, --name [TEXT]  Used for the temporary file.
  -a, --access-token [TEXT]  Access token by Dropbox.
  -s, --secret-access-key [TEXT]  Secert access key by AWS.
  -k, --access-key-id [TEXT]  Access key id by AWS.
EOF
}

function archive () {
    mkdir -p "$2/salvare"
    tar -zcvf "$2/salvare/$3.tar.gz" $1 > /dev/null 2>&1
}

while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -h|--help)
    show_help
    exit
    ;;
    -u|--upload-type)
    UPLOAD_TYPE="$2"
    shift
    shift
    ;;
    -d|--destination)
    DESTINATION="$2"
    shift
    shift
    ;;
    -t|--tmpdir)
    TMPDIR=${2%/}
    shift
    shift
    ;;
    -n|--name)
    NAME=$2
    shift
    shift
    ;;
    -a|--access-token)
    ACCESS_TOKEN=$2
    shift
    shift
    ;;
    -k|--access-key-id)
    ACCESS_KEY_ID=$2
    shift
    shift
    ;;
    -s|--secret-access-key)
    SECRET_ACCESS_KEY=$2
    shift
    shift
    ;;
    *)
    POSITIONAL+=("$1")
    shift
    ;;
esac
done
set -- "${POSITIONAL[@]}"

if [ "${TARGET##*/}" = "." ] || [ "${TARGET##*/}" = ".." ] ; then
    NAME="salvare"
else
    NAME=${TARGET##*/}
fi

if [[ "$TARGET" = "" ]] || [[ "$TARGET" == -* ]]; then
  echo "Required target directory"
  show_help
  exit 1
fi

if [ ! -e $TARGET ]; then
  echo "Not found target file or directory. [$TARGET]"
  show_help
  exit 1
fi

if [[ "$DESTINATION" = "" ]]; then
  echo "Required destination"
  show_help
  exit 1
fi

if [ ! -e $TMPDIR ]; then
  echo "Not found.tmp directory [$TMPDIR]"
  show_help
  exit 1
fi

archive $TARGET $TMPDIR $NAME

case $UPLOAD_TYPE in
    GCS)
    GSPATH=${DESTINATION##*gs://}
    BUCKET=${GSPATH%%/*}
    OBJECT=${GSPATH#*/}
    curl -X POST --data-binary @$TMPDIR/salvare/$NAME.tar.gz \
      -H "Authorization: Bearer `gcloud auth print-access-token`" \
      -H "Content-Type: application/gzip" \
      "https://storage.googleapis.com/upload/storage/v1/b/$BUCKET/o?uploadType=media&name=$OBJECT"
    rm -f $TMPDIR/salvare/$NAME.tar.gz
    ;;
    S3)
    S3PATH=${DESTINATION##*s3://}
    BUCKET=${S3PATH%%/*}
    OBJECT=${S3PATH#*/}
    MD5=`cat $TMPDIR/salvare/$NAME.tar.gz | openssl md5 --binary | base64`
    CONTENT_TYPE="application/x-compressed-tar"
    DATE=`date -R`
    SIGN="PUT\n${MD5}\n${CONTENT_TYPE}\n${DATE}\n/${BUCKET}/${OBJECT}"
    SIG=`echo -en ${SIGN} | openssl sha1 -hmac ${SECRET_ACCESS_KEY} -binary | base64`
    curl -X PUT -T "$TMPDIR/salvare/$NAME.tar.gz" \
      -H "Host: ${BUCKET}.s3.amazonaws.com" \
      -H "Date: ${DATE}" \
      -H "Content-Type: ${CONTENT_TYPE}" \
      -H "Content-MD5: ${MD5}" \
      -H "Authorization: AWS ${ACCESS_KEY_ID}:${SIG}" \
      https://${BUCKET}.s3.amazonaws.com/${OBJECT}
    ;;
    Dropbox)
    curl -X POST --data-binary @$TMPDIR/salvare/$NAME.tar.gz \
      -H "Authorization: Bearer $ACCESS_TOKEN" \
      -H "Dropbox-API-Arg: {\"path\": \"$DESTINATION\"}" \
      -H "Content-Type: application/octet-stream" \
      "https://content.dropboxapi.com/2/files/upload"
    ;;
    *)
    echo "Required upload_type is in [GCS, S3, Dropbox]"
    exit 1
    ;;
esac
